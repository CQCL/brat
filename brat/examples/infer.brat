map(X :: *, Y :: *, { X -> Y }, List(X)) -> List(Y)
map(_, _, _, []) = []
map(_, _, f, x ,- xs) = f(x) ,- map(!, !, f, xs)

-- TODO: Make BRAT solve for the # kinded args
mapVec(X :: *, Y :: *, { X -> Y }, n :: #, Vec(X, n)) -> Vec(Y, n)
mapVec(_, _, _, _, []) = []
mapVec(_, _, f, succ(n), x ,- xs) = f(x) ,- mapVec(!, !, f, n, xs)
