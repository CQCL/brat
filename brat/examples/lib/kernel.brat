-- Stuff available in tket for compiling circuits

ext "tket.X" X :: { Qubit -o Qubit }
ext "tket.Y" Y :: { Qubit -o Qubit }
ext "tket.Z" Z :: { Qubit -o Qubit }
ext "tket.H" H :: { Qubit -o Qubit }
ext "tket.S" S :: { Qubit -o Qubit }
ext "tket.T" T :: { Qubit -o Qubit }
ext "tket.Rx" Rx(Float) -> { Qubit -o Qubit }
ext "tket.Ry" Ry(Float) -> { Qubit -o Qubit }
ext "tket.Rz" Rz(Float) -> { Qubit -o Qubit }
ext "tket.CX" CX :: { Qubit, Qubit -o Qubit, Qubit }
ext "tket.CY" CY :: { Qubit, Qubit -o Qubit, Qubit }
ext "tket.CZ" CZ :: { Qubit, Qubit -o Qubit, Qubit }
ext "tket.CH" CH :: { Qubit, Qubit -o Qubit, Qubit }
ext "tket.CRx" CRx(Float) -> { Qubit, Qubit -o Qubit, Qubit }
ext "tket.CRy" CRy(Float) -> { Qubit, Qubit -o Qubit, Qubit }
ext "tket.CRz" CRz(Float) -> { Qubit, Qubit -o Qubit, Qubit }
ext "tket.M" M :: { Qubit -o Bit }

ext "builtin.measure" measure :: { Qubit -o# q::Money, b::Bit }
ext "builtin.fresh" fresh :: { Money -o# Qubit }

uncons(n :: #) -> { Vec(Qubit, succ(n)) -o Qubit, Vec(Qubit, n) }
uncons(_) = { cons(q, qs) => q, qs }

recons(n :: #) -> { Qubit, Vec(Qubit, n) -o Vec(Qubit, succ(n)) }
recons(_) = { q, qs => cons(q, qs) }

swap(Qubit, Qubit) -o Qubit, Qubit
swap(a, b) = b, a
