# this is a test comment
copy :: (value :: Type) -> (left :: Type), (right :: Type)
copy = x -> x, x

swap :: (agneta :: Type), (bjorn :: Type) -> (benny :: Type), (annefried :: Type)
swap = a, b -> b, a

# discard :: (value :: *) -> (unit :: *)
# discard = x -> ()

id :: (value :: Type) -> (value :: Type)
id = x -> x

testy :: (x :: Type) -> (x :: Type)
testy = x -> id(x)

test1 :: (x :: Type), (y :: Type) -> (x :: Type), (y :: Type)
test1 = x, y -> (id, id)(x, y)

noun :: (id :: { (x :: Type) -> (x :: Type) })
noun = { x -> testy(x) }
