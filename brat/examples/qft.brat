open import lib.kernel

ext "arith.i2f" to_float(Nat) -> Float

pi :: Float
pi = 3.1415926535897

entangle(n :: #, Nat)
      -> { Qubit, Vec(Qubit, n) -o
           Qubit, Vec(Qubit, n) }
entangle(zero, _) = { q, qs => q, qs }
entangle(succ(n), x) = {
    |, uncons(n);
    CRx(2.0 * pi / 2.0 ^ to_float(x)), |;
    swap, |;
    |, entangle(n, x + 1);
    swap, |;
    |, recons(n)
}

qft(n :: #) ->
   { Vec(Qubit, n) -o
     Vec(Qubit, n) }
qft(zero) = { [] => [] }
qft(succ(n)) = {
    uncons(n);
    H, |;
    entangle(n, 2);
    |, qft(n);
    recons(n)
}
