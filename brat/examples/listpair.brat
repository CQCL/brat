noun :: List([Nat, Bool])
noun = nil

id(List([Nat, Float])) -> List ([Nat, Float])
id(x) = x

type Real = Float

idRs :: { List(Real) -> List(Real) }
idRs(x) = x

idPos' :: { List([[], Real]) -> List ([[], Real]) }
idPos' = ?id'

idPos'' :: { (List ([Real, []])) -> List ([Real, []]) }
idPos'' = ?id''

idPos :: {List ([Real, Real]) -> List ([Real, Real]) }
idPos = ?id
