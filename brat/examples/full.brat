f(n :: #, Vec(Int, full(n))) -> Vec(Int, full(n))
f(0, []) = []
f(succ(n), xs) = xs -- Need vector patterns to test more

g(n :: #, Vec(Nat, succ(full(n))), Vec(Nat, succ(full(n)))) -> Vec(Nat, succ(full(succ(n))))
g(0, [x], [y]) = [x, y]
g(_, _, _) = ?todo -- Do the rest once we have vector patterns
