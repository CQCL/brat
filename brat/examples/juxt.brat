-- Expectation: This file parses and typechecks

I :: { Qubit -o Qubit }
I = { q => q }

-- We synthesize { Qubit -o Qubit },{ Qubit -o Qubit }
-- but merge the kernels in the typechecker
I2 :: { Qubit, Qubit -o Qubit, Qubit }
I2 = { I(), I() }

-- And much the same for classical functions
id :: Nat -> Nat
id = x => x

id2 :: (x :: Nat), (y :: Nat) -> (x :: Nat), (y :: Nat)
id2 = id(), id()

id3 :: Nat, Nat -> Nat, Nat
id3 = x, y => (id,id)(x, y)

asym :: Nat, Nat, Nat -> Nat, Nat, Nat
asym = id(), id2()

natToBool :: Nat -> Bool
natToBool(0) = false
natToBool(n) = true

boolToNat :: Bool -> Nat
boolToNat(true) = 1
boolToNat(false) = 0

notId :: { Nat, Bool -> Bool, Nat }
notId = { natToBool(), boolToNat() }
