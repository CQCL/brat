# This type is WRONG
test :: Vec X 2 <<< Vec X 2
test = {0..} # The identity thinning

test' :: Vec X 1 <<< Vec X 9
test' = {5} # just the fifth

vec :: Vec Nat 5
vec = [1, 2, 3, 4, 5]
 
test'' :: Vec Nat 1
test'' = vec{0} # vec{2,4,5}
# 
# test''' :: Vec Nat 1
# test''' = <0>

mapOn :: (th :: x <<< y), (f :: X -> X), (Vec X y) -> Vec X y


map = mapOn {1,4} f vec
